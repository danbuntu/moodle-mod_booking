{"version":3,"file":"bookit.1.min.js","sources":["../src/bookit.1.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport { reloadAllTables } from 'local_wunderbyte_table/reload';\nimport { SELECTORS } from './bookit';\n\n/**\n *\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n * @param {object} data\n */\nexport function bookit(itemid, area, userid, data) {\n\n    // eslint-disable-next-line no-console\n    console.log('run bookit');\n\n    Ajax.call([{\n        methodname: \"mod_booking_bookit\",\n        args: {\n            'itemid': itemid,\n            'area': area,\n            'userid': userid,\n            'data': JSON.stringify(data),\n        },\n        done: function (res) {\n\n            var skipreload = false;\n\n            if (document.querySelector('.booking-elective-component')) {\n                window.location.reload();\n            }\n\n            const jsonarray = JSON.parse(res.json);\n\n            // We might have more than one template to render.\n            const templates = res.template.split(',');\n\n            // There might be more than one button area.\n            const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n                '[data-itemid=\\'' + itemid + '\\']' +\n                '[data-area=\\'' + area + '\\']');\n\n            const promises = [];\n\n            // We run through every button. and render the data.\n            buttons.forEach(button => {\n\n                // eslint-disable-next-line no-console\n                console.log('bookit values', button.dataset.nojs, res.status);\n                skipreload = true;\n                if (button.dataset.nojs == 1\n                    && res.status == 0) {\n                    // eslint-disable-next-line no-console\n                    console.log('bookit skip', button.dataset.nojs, res.status);\n                } else {\n                    // For every button, we need a new jsonarray.\n                    const arraytoreduce = [...jsonarray];\n\n                    templates.forEach(template => {\n\n                        const data = arraytoreduce.shift();\n\n                        const datatorender = data.data ?? data;\n\n                        const promise = Templates.renderForPromise(template, datatorender).then(({ html, js }) => {\n\n                            Templates.replaceNode(button, html, js);\n\n                            return true;\n                        }).catch(ex => {\n                            Notification.addNotification({\n                                message: 'failed rendering ' + ex,\n                                type: \"danger\"\n                            });\n                        });\n\n                        promises.push(promise);\n                    });\n                }\n            });\n\n            Promise.all(promises).then(() => {\n\n                const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n\n                // eslint-disable-next-line no-console\n                console.log('skipreload', skipreload);\n\n                if (!backdrop && !skipreload) {\n                    reloadAllTables();\n                }\n\n                // The actions on successful booking are executed elsewhere.\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        }\n    }]);\n}\n"],"names":["itemid","area","userid","data","console","log","call","methodname","args","JSON","stringify","done","res","skipreload","document","querySelector","window","location","reload","jsonarray","parse","json","templates","template","split","buttons","querySelectorAll","SELECTORS","BOOKITBUTTON","promises","forEach","button","dataset","nojs","status","arraytoreduce","shift","datatorender","promise","Templates","renderForPromise","then","_ref","html","js","replaceNode","catch","ex","addNotification","message","type","push","Promise","all","backdrop","STATICBACKDROP","e"],"mappings":"4WAauBA,OAAQC,KAAMC,OAAQC,MAGzCC,QAAQC,IAAI,4BAEPC,KAAK,CAAC,CACPC,WAAY,qBACZC,KAAM,QACQR,YACFC,YACEC,YACFO,KAAKC,UAAUP,OAE3BQ,KAAM,SAAUC,SAERC,YAAa,EAEbC,SAASC,cAAc,gCACvBC,OAAOC,SAASC,eAGdC,UAAYV,KAAKW,MAAMR,IAAIS,MAG3BC,UAAYV,IAAIW,SAASC,MAAM,KAG/BC,QAAUX,SAASY,iBAAiBC,kBAAUC,aAChD,iBAAoB5B,OADkB2B,iBAEpB1B,KAAO,MAEvB4B,SAAW,GAGjBJ,QAAQK,SAAQC,YAGZ3B,QAAQC,IAAI,gBAAiB0B,OAAOC,QAAQC,KAAMrB,IAAIsB,QACtDrB,YAAa,EACc,GAAvBkB,OAAOC,QAAQC,MACE,GAAdrB,IAAIsB,OAEP9B,QAAQC,IAAI,cAAe0B,OAAOC,QAAQC,KAAMrB,IAAIsB,YACjD,OAEGC,cAAgB,IAAIhB,WAE1BG,UAAUQ,SAAQP,gCAERpB,KAAOgC,cAAcC,QAErBC,gCAAelC,KAAKA,sCAAQA,KAE5BmC,QAAUC,mBAAUC,iBAAiBjB,SAAUc,cAAcI,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,mCAEnEC,YAAYd,OAAQY,KAAMC,KAE7B,KACRE,OAAMC,2BACQC,gBAAgB,CACzBC,QAAS,oBAAsBF,GAC/BG,KAAM,cAIdrB,SAASsB,KAAKb,gBAK1Bc,QAAQC,IAAIxB,UAAUY,MAAK,WAEjBa,SAAWxC,SAASC,cAAcY,kBAAU4B,uBAGlDnD,QAAQC,IAAI,aAAcQ,YAErByC,UAAazC,2CAKX,KACRiC,OAAMU,IAELpD,QAAQC,IAAImD"}