{"version":3,"file":"subbookingAdditionalPerson.min.js","sources":["../../src/condition/subbookingAdditionalPerson.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/condition/subbookingAdditionalPerson\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {initbookitbutton} from 'mod_booking/bookit';\nimport {eventTypes} from 'core_filters/events';\n\nconst SELECTOR = {\n    FORMCONTAINER: '.subbooking-additionalperson-form',\n    MODALBODY: '.prepage-body',\n    CONTINUECONTAINER: ' div.prepage-booking-footer .continue-container',\n    CONTINUEBUTTON: ' div.prepage-booking-footer .continue-button',\n    BOOKINGBUTTON: '[data-area=\"subbooking\"][data-userid][data-itemid=\"',\n};\n\n/**\n * Init function.\n * @param {boolean} shoppingcartisinstalled\n */\nexport async function init(shoppingcartisinstalled) {\n\n    // eslint-disable-next-line no-console\n    console.log('init dynamic form');\n\n    const containers = document.querySelectorAll(SELECTOR.FORMCONTAINER);\n\n    containers.forEach(async container => {\n        const id = container.dataset.id;\n\n        const continuebutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.CONTINUEBUTTON);\n        const dynamicForm = new DynamicForm(container, 'mod_booking\\\\form\\\\subbooking\\\\additionalperson_form');\n\n        // We need to render the dynamic form right away, so we can acutally have all the necessary elements present.\n        await dynamicForm.load({id: id});\n\n        const bookitbutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n        // eslint-disable-next-line no-console\n        console.log(bookitbutton, continuebutton);\n\n        dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n            const response = e.detail;\n\n            if (response) {\n\n                unblockButtons(id, container);\n\n                dynamicForm.load({id: id});\n            }\n        });\n\n        document.addEventListener(eventTypes.filterContentUpdated, e => {\n            // eslint-disable-next-line no-console\n            console.log(e.target);\n\n            initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n        });\n\n        dynamicForm.addEventListener(dynamicForm.events.SERVER_VALIDATION_ERROR, () => {\n\n            // eslint-disable-next-line no-console\n            console.log('error with form');\n\n            initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n        });\n\n        dynamicForm.addEventListener('change', e => {\n\n            if (e.target.classList.contains('custom-select')) {\n                const button = document.querySelector('.subbooking-additionalperson-form [data-no-submit=\"1\"]');\n                dynamicForm.processNoSubmitButton(button);\n            }\n        });\n\n        initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n    });\n}\n\n/**\n * @param {integer} id\n * @param {HTMLElement} container\n * @param {*} dynamicForm\n * @param {boolean} shoppingcartisinstalled\n */\nfunction initButtons(id, container, dynamicForm, shoppingcartisinstalled) {\n\n    // We always need to get the buttons anew, as they might have been replaced.\n\n    const prepagemodal = container.closest(SELECTOR.MODALBODY);\n\n    if (!prepagemodal) {\n        return;\n    }\n\n    const bookitbutton = prepagemodal.querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n    // This goes on the bookit button as well as on the shopping cart.\n    // It will prevent the action to be triggered.\n    // Unless the form is validated (see above).\n    if (bookitbutton) {\n\n        // eslint-disable-next-line no-console\n        console.log('bookitbutton', bookitbutton);\n\n        blockButton(bookitbutton, dynamicForm);\n    }\n\n    // Only after the Form is loaded, we reinitialze the buttons.\n    try {\n        // Avoid any errors/warnings if no shopping_cart installed.\n        if (shoppingcartisinstalled) {\n            import('local_shopping_cart/cart')\n                    // eslint-disable-next-line promise/always-return\n                    .then(shoppingcart => {\n                        shoppingcart.buttoninit();\n                    })\n                    .catch(err => {\n                        // Handle any errors, including if the module doesn't exist\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                });\n            }\n        initbookitbutton();\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    }\n}\n\n/**\n *\n * @param {HTMLElement} button\n * @param {*} dynamicForm\n */\nfunction blockButton(button, dynamicForm) {\n\n    // eslint-disable-next-line no-console\n    console.log('blockButton', button);\n\n    if (!button.dataset.blocked) {\n        button.dataset.blocked = true;\n\n         // eslint-disable-next-line no-console\n        console.log('blockButton add listener', button);\n\n        button.addEventListener('click', () => {\n\n            // eslint-disable-next-line no-console\n            console.log('click');\n\n            dynamicForm.submitFormAjax();\n        });\n    }\n}\n\n/**\n *\n * @param {integer} id\n * @param {HTMLElement} container\n */\nfunction unblockButtons(id, container) {\n\n    // We always need to get the buttons anew, as they might have been replaced.\n\n    const bookitbutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n    if (bookitbutton) {\n        bookitbutton.dataset.blocked = 'false';\n    }\n}\n\n"],"names":["shoppingcartisinstalled","console","log","document","querySelectorAll","SELECTOR","forEach","async","id","container","dataset","continuebutton","closest","querySelector","dynamicForm","DynamicForm","load","bookitbutton","addEventListener","events","FORM_SUBMITTED","e","detail","blocked","unblockButtons","eventTypes","filterContentUpdated","target","initButtons","SERVER_VALIDATION_ERROR","classList","contains","button","processNoSubmitButton","prepagemodal","submitFormAjax","blockButton","then","shoppingcart","buttoninit","catch","err"],"mappings":"uRAqC2BA,yBAGvBC,QAAQC,IAAI,qBAEOC,SAASC,iBAAiBC,wBAElCC,SAAQC,MAAAA,kBACTC,GAAKC,UAAUC,QAAQF,GAEvBG,eAAiBF,UAAUG,QAAQP,oBAAoBQ,cAAcR,yBACrES,YAAc,IAAIC,qBAAYN,UAAW,8DAGzCK,YAAYE,KAAK,CAACR,GAAIA,WAEtBS,aAAeR,UAAUG,QAAQP,oBAAoBQ,cAAcR,uBAAyBG,IAGlGP,QAAQC,IAAIe,aAAcN,gBAE1BG,YAAYI,iBAAiBJ,YAAYK,OAAOC,gBAAgBC,IAC3CA,EAAEC,mBAuHPd,GAAIC,iBAIlBQ,aAAeR,UAAUG,QAAQP,oBAAoBQ,cAAcR,uBAAyBG,IAE9FS,eACAA,aAAaP,QAAQa,QAAU,SA1HvBC,CAAehB,GAAIC,WAEnBK,YAAYE,KAAK,CAACR,GAAIA,SAI9BL,SAASe,iBAAiBO,mBAAWC,sBAAsBL,IAEvDpB,QAAQC,IAAImB,EAAEM,QAEdC,YAAYpB,GAAIC,UAAWK,YAAad,4BAG5Cc,YAAYI,iBAAiBJ,YAAYK,OAAOU,yBAAyB,KAGrE5B,QAAQC,IAAI,mBAEZ0B,YAAYpB,GAAIC,UAAWK,YAAad,4BAG5Cc,YAAYI,iBAAiB,UAAUG,OAE/BA,EAAEM,OAAOG,UAAUC,SAAS,iBAAkB,OACxCC,OAAS7B,SAASU,cAAc,0DACtCC,YAAYmB,sBAAsBD,YAI1CJ,YAAYpB,GAAIC,UAAWK,YAAad,uPAnE1CK,uBACa,oCADbA,mBAES,gBAFTA,wBAIc,+CAJdA,uBAKa,+DAwEVuB,YAAYpB,GAAIC,UAAWK,YAAad,+BAIvCkC,aAAezB,UAAUG,QAAQP,wBAElC6B,0BAICjB,aAAeiB,aAAarB,cAAcR,uBAAyBG,IAKrES,eAGAhB,QAAQC,IAAI,eAAgBe,uBAgCfe,OAAQlB,aAGzBb,QAAQC,IAAI,cAAe8B,QAEtBA,OAAOtB,QAAQa,UAChBS,OAAOtB,QAAQa,SAAU,EAGzBtB,QAAQC,IAAI,2BAA4B8B,QAExCA,OAAOd,iBAAiB,SAAS,KAG7BjB,QAAQC,IAAI,SAEZY,YAAYqB,qBA9ChBC,CAAYnB,aAAcH,kBAMtBd,opBAGSqC,MAAKC,eACFA,aAAaC,gBAEhBC,OAAMC,MAGHxC,QAAQC,IAAIuC,uCAI9B,MAAOpB,GAELpB,QAAQC,IAAImB"}