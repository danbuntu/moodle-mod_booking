{"version":3,"file":"subbookingAdditionalPerson.min.js","sources":["../../src/condition/subbookingAdditionalPerson.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/condition/subbookingAdditionalPerson\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {initbookitbutton} from 'mod_booking/bookit';\nimport {eventTypes} from 'core_filters/events';\n\nconst SELECTOR = {\n    FORMCONTAINER: '.subbooking-additionalperson-form',\n    MODALBODY: '.prepage-body',\n    CONTINUECONTAINER: ' div.prepage-booking-footer .continue-container',\n    CONTINUEBUTTON: ' div.prepage-booking-footer .continue-button',\n    BOOKINGBUTTON: '[data-area=\"subbooking\"][data-userid][data-itemid=\"',\n};\n\n/**\n * Init function.\n * @param {boolean} shoppingcartisinstalled\n */\nexport async function init(shoppingcartisinstalled) {\n\n    // eslint-disable-next-line no-console\n    console.log('init dynamic form');\n\n    const containers = document.querySelectorAll(SELECTOR.FORMCONTAINER);\n\n    containers.forEach(async container => {\n        const id = container.dataset.id;\n\n        const continuebutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.CONTINUEBUTTON);\n        const dynamicForm = new DynamicForm(container, 'mod_booking\\\\form\\\\subbooking\\\\additionalperson_form');\n\n        // We need to render the dynamic form right away, so we can acutally have all the necessary elements present.\n        await dynamicForm.load({id: id});\n\n        const bookitbutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n        // eslint-disable-next-line no-console\n        console.log(bookitbutton, continuebutton);\n\n        dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n            const response = e.detail;\n\n            if (response) {\n\n                unblockButtons(id, container);\n\n                dynamicForm.load({id: id});\n            }\n        });\n\n        document.addEventListener(eventTypes.filterContentUpdated, e => {\n            // eslint-disable-next-line no-console\n            console.log(e.target);\n\n            initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n        });\n\n        dynamicForm.addEventListener(dynamicForm.events.SERVER_VALIDATION_ERROR, () => {\n\n            // eslint-disable-next-line no-console\n            console.log('error with form');\n\n            initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n        });\n\n        dynamicForm.addEventListener('change', e => {\n\n            if (e.target.classList.contains('custom-select')) {\n                const button = document.querySelector('.subbooking-additionalperson-form [data-no-submit=\"1\"]');\n                dynamicForm.processNoSubmitButton(button);\n            }\n        });\n\n        initButtons(id, container, dynamicForm, shoppingcartisinstalled);\n    });\n}\n\n/**\n * @param {integer} id\n * @param {HTMLElement} container\n * @param {*} dynamicForm\n * @param {boolean} shoppingcartisinstalled\n */\nfunction initButtons(id, container, dynamicForm, shoppingcartisinstalled) {\n\n    // We always need to get the buttons anew, as they might have been replaced.\n\n    const prepagemodal = container.closest(SELECTOR.MODALBODY);\n\n    if (!prepagemodal) {\n        return;\n    }\n\n    const bookitbutton = prepagemodal.querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n    // This goes on the bookit button as well as on the shopping cart.\n    // It will prevent the action to be triggered.\n    // Unless the form is validated (see above).\n    if (bookitbutton) {\n\n        // eslint-disable-next-line no-console\n        console.log('bookitbutton', bookitbutton);\n\n        blockButton(bookitbutton, dynamicForm);\n    }\n\n    // Only after the Form is loaded, we reinitialze the buttons.\n    try {\n        // Avoid any errors/warnings if no shopping_cart installed.\n        if (shoppingcartisinstalled) {\n            import('local_shopping_cart/cart')\n                    // eslint-disable-next-line promise/always-return\n                    .then(shoppingcart => {\n                        shoppingcart.buttoninit();\n                    })\n                    .catch(err => {\n                        // Handle any errors, including if the module doesn't exist\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                });\n            }\n        initbookitbutton();\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    }\n}\n\n/**\n *\n * @param {HTMLElement} button\n * @param {*} dynamicForm\n */\nfunction blockButton(button, dynamicForm) {\n\n    // eslint-disable-next-line no-console\n    console.log('blockButton', button);\n\n    if (!button.dataset.blocked) {\n        button.dataset.blocked = true;\n\n         // eslint-disable-next-line no-console\n        console.log('blockButton add listener', button);\n\n        button.addEventListener('click', () => {\n\n            // eslint-disable-next-line no-console\n            console.log('click');\n\n            dynamicForm.submitFormAjax();\n        });\n    }\n}\n\n/**\n *\n * @param {integer} id\n * @param {HTMLElement} container\n */\nfunction unblockButtons(id, container) {\n\n    // We always need to get the buttons anew, as they might have been replaced.\n\n    const bookitbutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.BOOKINGBUTTON + id);\n\n    if (bookitbutton) {\n        bookitbutton.dataset.blocked = 'false';\n    }\n}\n\n"],"names":["obj","async","shoppingcartisinstalled","console","log","document","querySelectorAll","SELECTOR","FORMCONTAINER","forEach","id","container","dataset","continuebutton","closest","MODALBODY","querySelector","CONTINUEBUTTON","dynamicForm","DynamicForm","load","bookitbutton","BOOKINGBUTTON","addEventListener","events","FORM_SUBMITTED","e","detail","blocked","unblockButtons","eventTypes","filterContentUpdated","target","initButtons","SERVER_VALIDATION_ERROR","classList","contains","button","processNoSubmitButton","_dynamicform","__esModule","default","_systemImportTransformerGlobalIdentifier","window","self","global","CONTINUECONTAINER","prepagemodal","submitFormAjax","blockButton","define","amd","Promise","resolve","reject","require","module","exports","component","loader","then","shoppingcart","buttoninit","catch","err","initbookitbutton"],"mappings":";;;;;;AAeA,IAAAA,0EAsBOC,eAAoBC,yBAGvBC,QAAQC,IAAI,qBAEOC,SAASC,iBAAiBC,SAASC,eAE3CC,SAAQR,kBACf,MAAMS,GAAKC,UAAUC,QAAQF,GAEvBG,eAAiBF,UAAUG,QAAQP,SAASQ,WAAWC,cAAcT,SAASU,gBAC9EC,YAAc,IAAIC,aAAAA,QAAYR,UAAW,8DAGzCO,YAAYE,KAAK,CAACV,GAAIA,KAE5B,MAAMW,aAAeV,UAAUG,QAAQP,SAASQ,WAAWC,cAAcT,SAASe,cAAgBZ,IAGlGP,QAAQC,IAAIiB,aAAcR,gBAE1BK,YAAYK,iBAAiBL,YAAYM,OAAOC,gBAAgBC,IAC3CA,EAAEC,UAuH/B,SAAwBjB,GAAIC,WAIxB,MAAMU,aAAeV,UAAUG,QAAQP,SAASQ,WAAWC,cAAcT,SAASe,cAAgBZ,IAE9FW,eACAA,aAAaT,QAAQgB,QAAU,QAEvC,CA5HgBC,CAAenB,GAAIC,WAEnBO,YAAYE,KAAK,CAACV,GAAIA,KAC1B,IAGJL,SAASkB,iBAAiBO,QAAAA,WAAWC,sBAAsBL,IAEvDvB,QAAQC,IAAIsB,EAAEM,QAEdC,YAAYvB,GAAIC,UAAWO,YAAahB,wBAAwB,IAGpEgB,YAAYK,iBAAiBL,YAAYM,OAAOU,yBAAyB,KAGrE/B,QAAQC,IAAI,mBAEZ6B,YAAYvB,GAAIC,UAAWO,YAAahB,wBAAwB,IAGpEgB,YAAYK,iBAAiB,UAAUG,IAEnC,GAAIA,EAAEM,OAAOG,UAAUC,SAAS,iBAAkB,CAC9C,MAAMC,OAAShC,SAASW,cAAc,0DACtCE,YAAYoB,sBAAsBD,OACtC,KAGJJ,YAAYvB,GAAIC,UAAWO,YAAahB,wBAAwB,GAExE,EAzEAqC,cANAvC,IAMAuC,eANAvC,IAAAwC,WAAAxC,IAAAyC,CAAAA,QAAAzC,KAMgD,IAAA0C,yCAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,CAAA,EAIhD,MAAMtC,SAAW,CACbC,cAAe,oCACfO,UAAW,gBACX+B,kBAAmB,kDACnB7B,eAAgB,+CAChBK,cAAe,uDAwEnB,SAASW,YAAYvB,GAAIC,UAAWO,YAAahB,yBAI7C,MAAM6C,aAAepC,UAAUG,QAAQP,SAASQ,WAEhD,IAAKgC,aACD,OAGJ,MAAM1B,aAAe0B,aAAa/B,cAAcT,SAASe,cAAgBZ,IAKrEW,eAGAlB,QAAQC,IAAI,eAAgBiB,cAgCpC,SAAqBgB,OAAQnB,aAGzBf,QAAQC,IAAI,cAAeiC,QAEtBA,OAAOzB,QAAQgB,UAChBS,OAAOzB,QAAQgB,SAAU,EAGzBzB,QAAQC,IAAI,2BAA4BiC,QAExCA,OAAOd,iBAAiB,SAAS,KAG7BpB,QAAQC,IAAI,SAEZc,YAAY8B,gBAAgB,IAGxC,CAjDQC,CAAY5B,aAAcH,cAI9B,IAEQhB,0BACA,mBAAAwC,yCAAAQ,QAAAR,yCAAAQ,OAAAC,IAAAC,IAAAA,SAAAC,SAAAA,QAAAC,QAAAZ,yCAAAa,QAAAF,CAAAA,4BAAAA,QAAAC,OAAA,IAAAE,oBAAAA,QAAAA,OAAAC,SAAAD,oBAAAD,SAAAC,oBAAAA,QAAAA,OAAAE,WAAAhB,yCAAAa,SAAAH,cAAAV,yCAAAa,QAAAI,OAAAP,QAAAC,QAAAE,QAAO,6BAA0BH,QAAAC,QAAAX,uEAExBkB,MAAKC,eACFA,aAAaC,YAAY,IAE5BC,OAAMC,MAGH7D,QAAQC,IAAI4D,IAAI,KAGhC,EAAAC,QAAAA,mBACH,CAAC,MAAOvC,GAELvB,QAAQC,IAAIsB,EAChB,CACJ,CA0CC"}